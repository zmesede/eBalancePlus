name: GitHub Actions Vercel Preview Deployment

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to deploy to'
        required: true
        type: string
      cmd_flag:
        description: 'The command flag to pass to Vercel (e.g. --prod)'
        required: false
        type: string
        default: ''
    secrets:
      VERCEL_TOKEN:
        description: 'The Vercel token to use for deployments'
        required: true
      VERCEL_ORG_ID:
        description: 'The Vercel organization ID to use for deployments'
        required: true
      VERCEL_PROJECT_ID:
        description: 'The Vercel project ID to use for deployments'
        required: true

permissions:
  contents: read
  issues: write
  pull-requests: write
  deployments: write

jobs:
  Deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm install --global vercel@canary

      - name: Pull Vercel Environment Information
        id: vercel_pull
        run: |
          echo "pull_output=$(vercel pull --yes --environment=${{ inputs.environment }} --token ${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

      - name: Build Project Artifacts
        id: vercel_build
        run: |
          echo build_output=$(vercel build --yes --token=${{ secrets.VERCEL_TOKEN }} ${{ inputs.cmd_flag }}) >> $GITHUB_OUTPUT

      - name: Deploy Project Artifacts to Vercel
        id: vercel_deploy
        run: |
          vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} ${{ inputs.cmd_flag }} | tee output.log
          echo log_url=$(grep -oP '(?<=Preview: ).*' output.log) >> $GITHUB_OUTPUT
          echo preview_url=$(grep -oP '(?<=Inspect: ).*' output.log) >> $GITHUB_OUTPUT

      - name: Create issue
        if: ${{ failure() }}
        run: |
          curl -L \
          -X POST \
          -H 'Accept: application/vnd.github+json' \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H 'X-GitHub-Api-Version: 2022-11-28' \
          -H 'Content-type: application/json' \
          https://api.github.com/repos/${{ github.repository }}/issues \
          -d '{
            "title":"Failed to deploy to ${{ inputs.environment }} for ${{ github.event.head_commit.message }}",
            "body":"${{ join(steps.*.outputs.*, '\n') }}",
            "labels":["bug","to sort"]
          }'

      - name: Create comment if pull-request
        if: ${{ github.event_name == 'pull_request' && success() }}
        run: |
          curl -L \
          -X PATCH \
          -H 'Accept: application/vnd.github+json' \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H "'X-GitHub-Api-Version: 2022-11-28" \
          -H 'Content-type: application/json' \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
          -d '{
            "body": "| Name | Status | Preview |\n| :--- | :----- | :------ |\n| **ebalanceplusgame** | :white_check_mark: Ready ([Inspect](${{ steps.vercel_deploy.outputs.log_url }})) | [Visit Preview](${{ steps.vercel_deploy.outputs.preview_url }}) |"
          }'
